# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username:  ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Build api image
        uses: docker/build-push-action@v2
        with:
          username: ${{ github.actor }}
          registry: docker.pkg.github.com
          repository: jonaskay/boardgame-inventory/api-image
          tag_with_ref: true
      - name: Build client image
        uses: docker/build-push-action@v2
        with:
          username: ${{ github.actor }}
          registry: docker.pkg.github.com
          repository: jonaskay/boardgame-inventory/client-image
          tag_with_ref: true
      - name: Build proxy image
        uses: docker/build-push-action@v2
        with:
          username: ${{ github.actor }}
          registry: docker.pkg.github.com
          repository: jonaskay/boardgame-inventory/proxy-image
          tag_with_ref: true
      - name: Build test image
        uses: docker/build-push-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: jonaskay/boardgame-inventory/test-image
          tag_with_ref: true
      # - name: Build containers
      #   run: docker-compose -f docker-compose.ci.yml up -d
      # - name: Run end to end tests
      #   run: docker-compose -f docker-compose.ci.yml run --rm test yarn start

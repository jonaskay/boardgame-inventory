name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  # build-api:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up gcloud
  #       uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         project_id: planar-acronym-293718
  #         service_account_key: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true
  #     - name: Build and push api image
  #       run: gcloud builds submit ./api --tag eu.gcr.io/planar-acronym-293718/api
  # build-client:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up gcloud
  #       uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         project_id: planar-acronym-293718
  #         service_account_key: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true
  #     - name: Build and push client image
  #       run: gcloud builds submit ./client --tag eu.gcr.io/planar-acronym-293718/client
  # build-proxy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up gcloud
  #       uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         project_id: planar-acronym-293718
  #         service_account_key: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true
  #     - name: Build and push proxy image
  #       run: gcloud builds submit ./proxy --tag eu.gcr.io/planar-acronym-293718/proxy
  # build-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up gcloud
  #       uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         project_id: planar-acronym-293718
  #         service_account_key: ${{ secrets.GCP_SA_KEY }}
  #         export_default_credentials: true
  #     - name: Build and push test image
  #       run: gcloud builds submit ./test --tag eu.gcr.io/planar-acronym-293718/test
  test:
    # needs: [build-api, build-client, build-proxy, build-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: planar-acronym-293718
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - run: gcloud info
      - name: Configure docker
        run: gcloud auth configure-docker
      - name: Start services
        run: docker-compose -f docker-compose.ci.yml up -d
        env:
          CLOUDSDK_PYTHON: /usr/bin/python
          LD_LIBRARY_PATH: /usr/local/lib
      - name: Run end to end tests
        run: docker-compose -f docker-compose.ci.yml run --rm test yarn start
  deploy-client:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: planar-acronym-293718
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - run: gcloud info
      - name: Configure docker
        run: gcloud auth configure-docker
      - name: Build client
        run: docker run -v ${{ github.workspace }}/client/build:/app/build eu.gcr.io/planar-acronym-293718/client:latest yarn build
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PLANAR_ACRONYM_293718 }}'
          projectId: planar-acronym-293718
          channelId: live
  deploy-api:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Set up gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Deploy api
        uses: GoogleCloudPlatform/github-actions/deploy-cloudrun@master
        with:
          image: eu.gcr.io/jonaskay/boardgame-inventory/api:latest
          service: boardgame-inventory-api

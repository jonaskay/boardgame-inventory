name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  # build-api:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username:  ${{ github.repository_owner }}
  #         password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #     - name: Build api image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./api
  #         file: ./api/Dockerfile
  #         push: true
  #         tags: ghcr.io/jonaskay/boardgame-inventory/api:latest
  # build-client:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username:  ${{ github.repository_owner }}
  #         password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #     - name: Build client image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./client
  #         file: ./client/Dockerfile
  #         push: true
  #         tags: ghcr.io/jonaskay/boardgame-inventory/client:latest
  # build-proxy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username:  ${{ github.repository_owner }}
  #         password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #     - name: Build proxy image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./proxy
  #         file: ./proxy/Dockerfile
  #         push: true
  #         tags: ghcr.io/jonaskay/boardgame-inventory/proxy:latest
  # build-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username:  ${{ github.repository_owner }}
  #         password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #     - name: Build test image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./test
  #         file: ./test/Dockerfile
  #         push: true
  #         tags: ghcr.io/jonaskay/boardgame-inventory/test:latest
  # test:
  #   needs: [build-api, build-client, build-proxy, build-test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username:  ${{ github.repository_owner }}
  #         password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #     - name: Start services
  #       run: docker-compose -f docker-compose.ci.yml up -d
  #     - name: Run end to end tests
  #       run: docker-compose -f docker-compose.ci.yml run --rm test yarn start
  # deploy-client:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  #     - name: Build client
  #       run: docker run -v ${{ github.workspace }}/client/build:/app/build ghcr.io/jonaskay/boardgame-inventory/client:latest yarn build
  #     - name: Deploy to Firebase Hosting
  #       uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #         firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PLANAR_ACRONYM_293718 }}'
  #         projectId: planar-acronym-293718
  #         channelId: live
  deploy-api:
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up gcloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Deploy api
        uses: GoogleCloudPlatform/github-actions/deploy-cloudrun@master
        with:
          image: ghcr.io/jonaskay/boardgame-inventory/api:latest
          service: boardgame-inventory-api
